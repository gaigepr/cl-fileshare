(in-package :cl-fileshare)

(defun child-directory-p (child parent)
  (let ((c (format nil "~a" (truename child)))
        (p (format nil "~a" (truename parent))))
    (cond ((> (length p) (length c)) nil)
          ((string= p
                    (subseq c 0 (length p)))))))

(defun index-directory (directory)
  (when (cl-fad:directory-exists-p directory)
    (let ((path (pathname directory)))
      (if (child-directory-p path *share-root*)
          (let ((listing (cl-fad:list-directory path))
                (json-listing '()))
            (dolist (dir listing)
              (if (cl-fad:directory-exists-p dir)
                  (push (list (cons :path (namestring dir))
                              (cons :kind "Directory"))
                        json-listing)
                  (multiple-value-bind (type detail) (cl-mime:lookup-mime dir)
                    (push (list (cons :path (namestring dir))
                                (cons :fileType type)
                                (cons :detailType detail)
                                (cons :kind "File"))
                          json-listing))))
          json-listing)))))
            ;;(list (cons "index" json-listing)))))))
